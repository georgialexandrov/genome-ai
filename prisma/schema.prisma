// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Core models for enriched SNP data
model Snp {
  rsid                      String            @id
  chromosome                String?
  position                  Int?
  gene                      String?
  summary                   String?
  magnitude                 Float?
  genotype                  String? // Added genotype field
  interpretation            String? // AI-generated interpretation
  interpretationGeneratedAt DateTime? // When the interpretation was last generated
  snpediaParsedData         Json? // Complete parsed data from SNPedia as JSON
  snpediaLastFetched        DateTime? // When the SNPedia data was last fetched
  phenotypes                Phenotype[]
  tags                      SnpTag[]
  drugInteractions          DrugInteraction[]
}

model Phenotype {
  id         Int     @id @default(autoincrement())
  rsid       String
  phenotype  String
  riskAllele String?
  effectSize Float?
  snp        Snp     @relation(fields: [rsid], references: [rsid])
}

model Tag {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  category String?
  snps     SnpTag[]
}

model SnpTag {
  snpId String
  tagId Int
  snp   Snp    @relation(fields: [snpId], references: [rsid])
  tag   Tag    @relation(fields: [tagId], references: [id])

  @@id([snpId, tagId])
}

model DrugInteraction {
  id          Int    @id @default(autoincrement())
  rsid        String
  drugName    String
  interaction String
  snp         Snp    @relation(fields: [rsid], references: [rsid])
}

model GenotypeData {
  id         Int            @id @default(autoincrement())
  rsid       String
  chromosome String
  position   Int
  genotype   String
  source     GenotypeSource
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  @@unique([rsid, source]) // Ensure one entry per rsid per source
  @@index([rsid])
  @@index([source])
}

enum GenotypeSource {
  TWENTYTHREEANDME
  DANTELABS
}

model TaskQueue {
  id           Int       @id @default(autoincrement())
  taskType     String // Type of task (e.g., "snpedia-update", "genome-analysis", etc.)
  taskId       String // Unique identifier for the specific task (e.g., rsid for SNP tasks)
  arguments    Json? // Task-specific arguments as JSON
  status       String    @default("pending") // pending, processing, done, error
  priority     Int       @default(0) // Higher number = higher priority
  retryCount   Int       @default(0) // Number of times this task has been retried
  maxRetries   Int       @default(3) // Maximum number of retries allowed
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  processedAt  DateTime?
  completedAt  DateTime?
  errorMessage String?
  result       Json? // Task result stored as JSON

  @@unique([taskType, taskId]) // Ensure unique tasks
  @@index([status, priority, createdAt])
  @@index([taskType, status])
}
